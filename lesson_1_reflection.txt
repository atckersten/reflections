How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    it only showed the changed text, it dit not show things that were not altered.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

it should be easy to get to a version to get back to versions of code that you trust to work as expected. 
If this is not possible you would heve to spend a lot of time to get back to your orgiginal code as it was in an ealier stage.
    

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    pro: you decide what is important to save changes to your code
    con: you can make errrors

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    software projects often consists out of multiple files on which a programmer works simultaniously. It saves time to commit all these changed files
    in one go.

How can you use the commands git log and git diff to view the history of files?

    Git log shows the history of all commits git diff shows the differences between 2 commits.

How might using version control make you more confident to make changes that
could break something?

    As you know it will be easy to refert to an earlier version it will make making changes a easier. 

Now that you have your workspace set up, what do you want to try using Git for?

    Applying version control to app projects
